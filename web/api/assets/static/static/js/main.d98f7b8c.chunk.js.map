{"version":3,"sources":["components/LastUpdated.js","components/Refresher.js","components/Spinner.js","components/NetworkError.js","components/RouteHeader.js","routes.js","components/Confirmation.js","components/Utils.js","actions/index.js","views/SmartView.js","views/Home.js","components/DataTable.js","views/History.js","views/Profile.js","components/Shield.js","components/SidebarWrap.js","components/Navigation.js","App.js","reducers/index.js","store.js","history.js","index.js"],"names":["LastUpdated","className","date","this","props","Component","Refresher","Button","circular","icon","color","onClick","refreshFunction","refreshDate","Spinner","ph","i","push","Grid","Column","key","Segment","raised","Placeholder","Header","image","Line","Paragraph","length","Container","columns","centered","getPlaceholders","Loader","active","Row","NetworkError","Icon","size","name","RouteHeader","route","homeRoute","routes","getRoute","style","textAlign","iconColor","Divider","horizontal","as","defaultProps","Confirmation","handleConfirm","onConfirm","handleCancel","onCancel","Confirm","open","opened","header","cancelButton","confirmButton","dimmer","capitalizeFirstLetter","str","undefined","charAt","toUpperCase","slice","toLowerCase","buildUrl","url","putData","call","section","sc","fc","dispatch","baseResetRequestState","axios","put","data","then","response","status","Error","statusText","catch","error","handleNetworkError","apiPut","postData","post","apiPost","getData","calls","recursiveApiFetch","networkDownloadProgress","progressEvent","total","loaded","baseLoadingProgress","Math","round","prevState","get","onDownloadProgress","progress","state","respKey","next","baseRequestFinished","bool","type","hasErrored","baseHasErrored","message","isLoading","lastUpdated","Date","now","loadingProgress","mapDispatchToProps","successCallback","failCallback","SmartView","showDuration","discardArray","copyState","Object","assign","visible","confirmVisible","location","locations","locationLink","isLast","Breadcrumb","Section","to","divider","fetch","bind","setTimeout","setState","content","toastManager","add","appearance","autoDismiss","pausonhover","onModalConfirm","trackingID","getRefresher","window","pathname","split","renderHeader","loading","paddingTop","padding","Transition","duration","hide","show","renderContent","BotInput","investment","bias","register","d","newVal","val","value","step","marginBottom","marks","25","50","75","onChange","investmentChanged","Input","placeholder","e","biasChanged","Home","botDataFn","fn","hourStats","Card","minWidth","minHeight","Content","float","Meta","Description","borderRadius","Label","Statistic","Group","widths","Value","parseFloat","monthly_roi","toFixed","rmse","train_samples","nextHourPred","Detail","portfolio","btc","free","usdt","extra","labelPosition","user_id","portfolio_ratio","createSuccess","console","log","symbol","theme","Themes","DARK","timezone","studies","autosize","width","height","getTradingView","getBotOperations","connect","base","home","withToastManager","DataTable","page","pageSize","rowsChecked","selectedCount","edit","Cell","row","Dropdown","item","button","pointing","fontSize","Menu","Item","onActionSelect","rowIdentifier","getProps","rowInfo","column","overflow","sortable","filterable","action","id","onNew","onEdit","onDelete","marginRight","basic","margin","loadingText","noDataText","onPageChange","onPageSizeChange","previousText","nextText","makeTable","instance","sortedData","accessor","unix","format","History","history","windowWidth","siteState","site","Profile","email","binanceKey","binanceSecret","user","Form","Field","binance_key","binance_secret","bots","profile","Route","path","link","withLink","component","Shield","info","handleClientError","children","shield","stack","LinkComponent","routePath","display","withLabel","SidebarWrap","menuExpanded","activeItem","createLinks","linkList","createLink","Sidebar","animation","direction","inverted","vertical","onMouseEnter","onMouseDown","onMouseLeave","getSidebar","getMiniSidebar","Navigation","createRoutes","routesList","createRoute","exact","Pusher","getWidth","App","contextRef","createRef","updateWindowSize","addEventListener","removeEventListener","setWindowSize","innerWidth","innerHeight","visibility","Progress","loadingTotal","indicating","Ref","innerRef","autoDismissTimeout","placement","marginTop","Sticky","context","getProgressBar","Pushable","getOffsetColumn","marginLeft","paddingBottom","fontWeight","baseWindowResize","withRouter","stateAwareComponents","getInitialState","windowHeight","combineReducers","newState","sectionState","store","createStore","rootReducer","applyMiddleware","ReduxThunk","createBrowserHistory","JavascriptTimeAgo","addLocale","en","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d98f7b8c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TimeAgo from 'react-time-ago'\n\nclass LastUpdated extends Component {\n  render() {\n    return (\n      <small className=\"text-muted\">\n        Last updated <TimeAgo date={this.props.date}></TimeAgo>\n      </small>\n    );\n  }\n}\n\nexport default LastUpdated;\n","import React, { Component } from 'react'\nimport {\n  Button\n} from 'semantic-ui-react'\n\nimport LastUpdated from \"./LastUpdated\";\n\nclass Refresher extends Component {\n  render() {\n    return (\n      <div>\n        <Button circular icon='refresh' color={\"pink\"} onClick={this.props.refreshFunction}></Button>\n        <br />\n        <LastUpdated date={this.props.refreshDate} />\n      </div>\n    );\n  }\n}\n\nexport default Refresher;\n","import React, { Component } from 'react'\n\nimport { Container, Segment, Grid, Loader, Placeholder } from 'semantic-ui-react'\n\nclass Spinner extends Component {\n  getPlaceholders() {\n    let ph = [];\n\n    for(let i = 0; i < 9; i++) {\n      ph.push(\n      <Grid.Column key={`ph-${i}`}>\n            <Segment raised>\n              <Placeholder>\n                <Placeholder.Header image>\n                  <Placeholder.Line />\n                  <Placeholder.Line />\n                </Placeholder.Header>\n                <Placeholder.Paragraph>\n                  <Placeholder.Line length='medium' />\n                  <Placeholder.Line length='short' />\n                </Placeholder.Paragraph>\n              </Placeholder>\n            </Segment>\n      </Grid.Column>\n      );\n    }\n\n    return ph;\n  }\n\n  render() {\n    return (\n      <Container>\n        <Grid columns={3} centered>\n          {this.getPlaceholders()}\n\n          <Loader active>Loading</Loader>\n\n          <Grid.Row>\n          </Grid.Row>\n\n          <Grid.Row>\n          </Grid.Row>\n\n          <Grid.Row>\n          </Grid.Row>\n\n          <Grid.Row>\n          </Grid.Row>\n\n          <Grid.Row>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default Spinner;\n","import React, { Component } from 'react'\n\nimport { Icon } from 'semantic-ui-react'\n\nclass NetworkError extends Component {\n  render() {\n    return (\n      <div>\n        <Icon size={\"big\"} color={\"pink\"} name={\"exclamation triangle\"}></Icon>\n        <h2>Server error</h2>\n      </div>\n    );\n  }\n}\n\nexport default NetworkError;\n","import React, { Component } from 'react'\n\nimport { Icon, Divider, Header, Grid } from 'semantic-ui-react'\nimport { getRoute } from '../routes';\n\nexport default class RouteHeader extends Component {\n  static defaultProps = {\n    iconColor: \"pink\"\n  }\n\n  render() {\n    const route = getRoute(this.props.route);\n\n    return (\n      <Grid.Row centered>\n        <Grid.Column style={{ textAlign: 'center' }}>\n          <Icon name={route.icon} color={this.props.iconColor} />\n          <Divider horizontal>\n            <Header as='h2' color={'pink'}>\n              {route.name}\n            </Header>\n          </Divider>\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n}\n","import Home from \"./views/Home\"\nimport History from \"./views/History\"\nimport Profile from \"./views/Profile\";\n\nclass Route {\n    constructor(path, link, name, icon, withLink, component) {\n        this.path = path;\n        this.link = link;\n        this.name = name;\n        this.icon = icon;\n        this.withLink = withLink;\n        this.component = component;\n    }\n}\n\nexport const routes = [\n    new Route(\"/trading\", \"/trading\", \"Trading\", \"home\", true, Home),\n    new Route(\"/history\", \"/history\", \"History\", \"history\", true, History),\n    new Route(\"/profile\", \"/profile\", \"Profile\", \"user\", true, Profile),\n];\n\nexport const homeRoute = new Route(\"/\", \"/\", \"Trading\", \"home\", true, Home);\n\nexport function getRoute(route) {\n    if (route === \"\") {\n        return homeRoute\n    }\n\n    for (let i = 0; i < routes.length; i++) {\n        if (route === routes[i].name)\n            return routes[i];\n    }\n\n    return \"\";\n}\n","import React, { Component } from 'react'\nimport { Confirm } from 'semantic-ui-react'\n\nexport default class Confirmation extends Component {\n  static defaultProps = { opened: false }\n\n  handleConfirm = () => {\n    this.props.onConfirm();\n  }\n\n  handleCancel = () => {\n    this.props.onCancel();\n  }\n\n  render() {\n    return (\n        <Confirm\n          open={this.props.opened}\n          header='Please confirm'\n          cancelButton='Not really'\n          confirmButton=\"Yes!\"\n          dimmer={\"inverted\"}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleConfirm}\n        />\n    )\n  }\n}\n","export function capitalizeFirstLetter(str) {\n    if (str === undefined || str === \"\") {\n        return \"\"\n    }\n\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n","import axios from \"axios\";\n\nexport function buildUrl(url) {\n    return `${url}`;\n}\n\nexport function putData(call, section, sc, fc) {\n  return (dispatch) => {\n    dispatch(baseResetRequestState(section));\n    apiPut(dispatch, call, section, sc, fc);\n  };\n}\n\nexport function postData(call, section, sc, fc) {\n  return (dispatch) => {\n    //dispatch(baseResetRequestState(section));\n    apiPost(dispatch, call, section, sc, fc);\n  };\n}\n\nexport function getData(calls, section) {\n  return (dispatch) => {\n    dispatch(baseResetRequestState(section));\n    recursiveApiFetch(dispatch, calls, section);\n  };\n}\n\nexport function handleClientError(error, errorInfo, section) {\n  return (dispatch) => {\n  };\n}\n\nexport function setWindowSize(width, height, section) {\n  return (dispatch) => {\n    dispatch(baseWindowResize(width, height, section));\n  };\n}\n\nfunction apiPut(dispatch, call, section, sc, fc) {\n  axios.put(buildUrl(call.url), call.data)\n    .then(function (response) {\n      if (response.status !== 200)\n        throw Error(response.statusText);\n\n      if (sc)\n        sc();\n    }).catch((error) => handleNetworkError(dispatch, error, section, fc));\n}\n\nfunction apiPost(dispatch, call, section, sc, fc) {\n  axios.post(buildUrl(call.url), call.data)\n    .then(function (response) {\n      if (response.status !== 201)\n        throw Error(response.statusText);\n\n      if (sc)\n        sc();\n      \n      //dispatch(baseRequestFinished({}, section));\n    }).catch((error) => handleNetworkError(dispatch, error, section, fc));\n}\n\nconst networkDownloadProgress = (progressEvent, dispatch) => {\n  let total = progressEvent.total;\n  let loaded = progressEvent.loaded;\n\n  let progress = Math.round((loaded / total) * 100);\n\n  dispatch(baseLoadingProgress(progress, 'site'));\n}\n\nfunction recursiveApiFetch(dispatch, calls, section, prevState = {}) {\n  axios.get(buildUrl(calls.url), { onDownloadProgress: (progress) => networkDownloadProgress(progress, dispatch) })\n    .then(function (response) {\n      if (response.status !== 200)\n        throw Error(response.statusText);\n\n      const state = prevState;\n      state[calls.respKey] = response.data;\n\n      if (calls.next) {\n        dispatch(baseLoadingProgress(0, 'site'));\n        recursiveApiFetch(dispatch, calls.next, section, state);\n        return\n      }\n\n      dispatch(baseRequestFinished(state, section));\n\n    }).catch((error) => handleNetworkError(dispatch, error, section));\n}\n\nfunction handleNetworkError(dispatch, error, section, fc) {\n  dispatch(baseLoadingProgress(100, 'site'));\n\n  dispatch(baseHasErrored(error.message, section));\n\n  if (fc)\n    fc();\n}\n\nfunction baseRequestFinished(data, section) {\n  return {\n    type: 'REQUEST_FINISHED',\n    section: section,\n    isLoading: false,\n    lastUpdated: Date.now(),\n    data\n  };\n}\n\nfunction baseResetRequestState(section) {\n  return {\n      type: 'RESET_REQUEST_STATE',\n      section: section,\n      isLoading: true,\n      hasErrored: \"\"\n    };\n} \n\nfunction baseHasErrored(bool, section) {\n  return {\n    type: 'HAS_ERRORED',\n    section: section,\n    hasErrored: bool\n  };\n}\n\nfunction baseLoadingProgress(progress, section) {\n  return {\n    type: 'LOADING_PROGRESS',\n    section: section,\n    loadingProgress: progress\n  };\n}\n\nfunction baseWindowResize(width, height, section) {\n  return {\n    type: 'WINDOW_RESIZE',\n    section: section,\n    width: width,\n    height: height\n  };\n}","import React, { Component } from 'react';\n\nimport Refresher from \"../components/Refresher\";\nimport Spinner from \"../components/Spinner\";\nimport NetworkError from \"../components/NetworkError\";\nimport RouteHeader from '../components/RouteHeader';\nimport Confirmation from '../components/Confirmation';\n\nimport { capitalizeFirstLetter } from '../components/Utils'\n\nimport {\n  Breadcrumb,\n  Grid,\n  Transition,\n} from 'semantic-ui-react';\n\nimport { Link } from 'react-router-dom';\n\nimport { getData, postData, putData } from \"../actions/index\";\n\nclass SmartView extends Component {\n  state = {}\n  showDuration = 150\n\n  fetch() {\n    // To be overridden, do not delete.\n  }\n\n  cleanState(state, discardArray) {\n    let copyState = {};\n    Object.assign(copyState, state);\n\n    for (let i = 0; i < discardArray.length; i++) {\n      delete copyState[discardArray[i]];\n    }\n\n    delete copyState.visible;\n    delete copyState.confirmVisible;\n\n    return copyState;\n  }\n\n  getSection(location, locations) {\n    let locationLink = \"\";\n\n    for (let i = 0; i < locations.length; i++) {\n      locationLink += `/${locations[i]}`;\n\n      if (location === locations[i])\n        break;\n    }\n\n    function isLast() {\n      return location === locations[locations.length - 1];\n    }\n\n    function link() {\n      if (!isLast())\n        return (<Link key={location + '-a'} to={locationLink}>{capitalizeFirstLetter(location)}</Link>);\n\n      return capitalizeFirstLetter(location);\n    }\n\n    function divider() {\n      if (!isLast())\n        return (<Breadcrumb.Divider key={location + '-div'} icon='right chevron' />);\n    }\n\n    return (\n      <span key={location + '-d'}>\n        <Breadcrumb.Section key={location + '-s'}>\n          {link()}\n        </Breadcrumb.Section>\n        {divider()}\n      </span>\n    );\n  }\n\n  getRefresher() {\n    return <Refresher refreshFunction={this.fetch.bind(this)} refreshDate={this.props.state.lastUpdated} />;\n  }\n\n  componentDidMount() {\n    this.fetch();\n\n    // Transition animation\n    setTimeout(() => {\n      this.setState(prevState => ({\n        visible: !prevState.visible || true\n      }));\n    }, 100);\n  }\n\n  toastSuccess(content) {\n    this.props.toastManager.add(content, { appearance: 'success', autoDismiss: \"true\" })\n  }\n\n  toastInfo(content) {\n    this.props.toastManager.add(content, { appearance: 'info', autoDismiss: true, pausonhover: \"false\" })\n  }\n\n  toastWarning(content) {\n    this.props.toastManager.add(content, { appearance: 'warning', autoDismiss: true, pausonhover: \"false\" })\n  }\n\n  toastError(content) {\n    this.props.toastManager.add(content, { appearance: 'error', autoDismiss: true, pausonhover: \"false\" })\n  }\n\n  confirmModal(onConfirm) {\n    this.setState({ onModalConfirm: onConfirm }, () => {\n      this.setState({ confirmVisible: true });\n    });\n  }\n\n  render() {\n    if (this.props.state.hasErrored) {\n      return (\n        <Grid>\n          <Grid.Row centered>\n            <NetworkError hasErrored={this.props.state.hasErrored} trackingID={this.props.state.trackingID} />\n          </Grid.Row>\n\n          <Grid.Row centered>\n            {this.getRefresher()}\n          </Grid.Row>\n        </Grid>\n      );\n    }\n\n    let locations = window.location.pathname.split(\"/\");\n    let location = locations[1];\n\n    if (this.props.state.isLoading) {\n      return (\n        <>\n          {this.renderHeader(location)}\n          <Spinner loading={true} refreshFunction={this.fetch.bind(this)} refreshDate={this.props.state.lastUpdated} />\n        </>\n      );\n    }\n\n    return (\n      <Grid style={{paddingTop: 20}}>\n\n        <Grid.Row style={{ padding: 0 }}>\n          <Grid.Column>\n\n            {this.renderHeader(location)}\n\n            <Transition duration={{ hide: 0, show: this.showDuration }} visible={this.state.visible || false}>\n              {this.renderContent()}\n            </Transition>\n\n          </Grid.Column>\n        </Grid.Row>\n\n        <Transition duration={{ hide: 0, show: this.showDuration }} visible={this.state.visible || false}>\n          <Grid.Row centered>\n            {this.getRefresher()}\n          </Grid.Row>\n        </Transition>\n\n        <Confirmation\n          opened={this.state.confirmVisible || false}\n          onCancel={() => this.setState({ confirmVisible: false })}\n          onConfirm={() => {\n            this.state.onModalConfirm();\n            this.setState({ confirmVisible: false });\n          }}\n        />\n      </Grid>\n    )\n  }\n\n  renderHeader(location) {\n    return <RouteHeader route={capitalizeFirstLetter(location) || \"\"} />;\n  }\n\n  renderContent() {\n    throw new Error('Unimplemented renderContent() in SmartView!');\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    getData: (calls, section) => dispatch(getData(calls, section)),\n    postData: (call, section, successCallback, failCallback) => dispatch(postData(call, section, successCallback, failCallback)),\n    putData: (call, section, successCallback, failCallback) => dispatch(putData(call, section, successCallback, failCallback))\n  };\n};\n\nexport default SmartView;\n","import React, {Component} from 'react'\n\nimport { connect } from \"react-redux\";\n\nimport SmartView, { mapDispatchToProps } from \"./SmartView\";\n\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\n\nimport { Input, Label, Grid, Card, Icon, Button, Statistic } from 'semantic-ui-react'\n\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { withToastManager } from 'react-toast-notifications';\n\nclass BotInput extends Component {\n  constructor(props) {\n    super(props);\n    props.register(this.getData.bind(this));\n  }\n\n  getData() {\n    return {investment: this.state.investment, bias: this.state.bias}\n  }\n\n  state = {\n    investment: 1,\n    bias: 0\n  }\n\n  investmentChanged(d) {\n    let newVal = 1;\n    let val = d.value || d;\n\n    if (val === \"\" || val === undefined) {\n      newVal = \"\"\n    }\n    else if (val <= 1) {\n      newVal = 1;\n    } else if (val >= 100) {\n      newVal = 100;\n    } else {\n      newVal = val;\n    }\n\n    if (typeof newVal === 'object') {\n      newVal = \"\"\n    }\n    this.setState({investment: newVal})\n  }\n\n  biasChanged(d) {\n    let newVal = 0;\n\n    if (d.value === \"\" || d.value === undefined) {\n      newVal = \"\"\n    }\n    else if (d.value <= -1) {\n      newVal = -1;\n    } else if (d.value >= 1) {\n      newVal = 1;\n    } else {\n      newVal = d.value;\n    }\n    this.setState({bias: newVal})\n  }\n\n  render() {\n    return (\n      <>\n          <h3>Investment %</h3>\n            <Slider step={5} style={{marginBottom: 30}} marks={{25:<><p>25%</p></>, 50:<><p>50%</p></>, 75:<><p>75%</p></>}} onChange={(d) => {this.investmentChanged(d)}} value={this.state.investment} />\n            <Input icon='percent' placeholder='Portfolio percentage...' onChange={(e, d) => {this.investmentChanged(d)}} value={this.state.investment} />\n          <h3>Bias (-1, 1)</h3>\n            <Input icon='certificate' placeholder='Bias number to apply..' onChange={(e, d) => {this.biasChanged(d)}} value={this.state.bias} />\n      </>\n    );\n  }\n}\n\nexport class Home extends SmartView {\n  fetch() {\n    this.props.getData({\n       url: \"/api/model/day/stats\",\n       respKey: \"dayStats\",\n       next: {\n        url: \"/api/model/hour/stats\",\n        respKey: \"hourStats\",\n        next: {\n          url: \"/api/model/hour/pred\",\n          respKey: \"nextHourPred\",\n          next: {\n            url: \"/api/user/portfolio\",\n            respKey: \"portfolio\",\n          }\n        }\n       }\n     }, \"home\");\n  }\n\n  state = {\n    botDataFn: {}\n  }\n\n  register(fn) {\n    this.setState({botDataFn: fn});\n  }\n\n  createSuccess() {\n    super.toastSuccess(\"Success!\")\n  }\n\n  getBotOperations() {\n    if (this.props.state.data.hourStats === undefined) {\n      return <></>\n    }\n    return (\n      <Card style={{minWidth: 600, minHeight: 650, textAlign: \"left\"}}>\n          <Card.Content>\n            <Icon\n                color=\"pink\"\n                size=\"large\"\n                name='rocket'\n                style={{float:\"right\"}}\n              />\n\n            <Card.Header>Deep Learning Trading Bot</Card.Header>\n            <Card.Meta>Spot Trading</Card.Meta>\n            <Card.Description style={{borderRadius:10}}>\n              <Label style={{marginBottom: 5}} color='yellow'>\n                  Binance\n              </Label>\n\n              <Label style={{marginBottom: 5}} color='blue'>\n                  Hourly\n              </Label>\n\n              <Statistic.Group widths={3} size={\"mini\"}>\n\n              <Statistic color=\"green\">\n                <Statistic.Value>\n                  <Icon name='angle double up' />{(parseFloat(this.props.state.data.hourStats.monthly_roi) * 100).toFixed(0)}%\n                </Statistic.Value>\n                <Statistic.Label>Backtesting Month RoI</Statistic.Label>\n              </Statistic>\n\n              <Statistic color=\"blue\">\n                <Statistic.Value>\n                  <Icon name='chess board' />{parseFloat(this.props.state.data.hourStats.rmse).toFixed(0)}\n                </Statistic.Value>\n                <Statistic.Label>Model RMSE</Statistic.Label>\n              </Statistic>\n\n              <Statistic color=\"yellow\">\n                <Statistic.Value>\n                  <Icon name='cubes' />{this.props.state.data.hourStats.train_samples}\n                </Statistic.Value>\n                <Statistic.Label>Train Samples</Statistic.Label>\n              </Statistic>\n          </Statistic.Group>\n\n        <Grid>\n          <Grid.Row centered>\n            <Statistic color=\"green\" size={\"small\"}>\n                    <Statistic.Value>\n                      <Icon name='bitcoin' />{(parseFloat(this.props.state.data.nextHourPred.value)).toFixed(0)}\n                    </Statistic.Value>\n                    <Statistic.Label>Next Prediction</Statistic.Label>\n              </Statistic>\n          </Grid.Row>\n        </Grid>\n            </Card.Description>\n            <h3>Portfolio</h3>\n        <Label style={{marginBottom: 5}} color='yellow'>\n            <Icon name=\"bitcoin\"/> BTC\n          <Label.Detail>{this.props.state.data.portfolio.btc.free}</Label.Detail>\n        </Label>\n\n        <Label style={{marginBottom: 5}} color='green'>\n        <Icon name=\"dollar sign\"/> USDT\n          <Label.Detail>{this.props.state.data.portfolio.usdt.free}</Label.Detail>\n        </Label>\n\n          <BotInput register={this.register.bind(this)}/>\n          </Card.Content>\n          <Card.Content extra>\n\n          <Grid>\n            <Grid.Row centered>\n              <Button\n                color=\"pink\"\n                size=\"large\"\n                labelPosition=\"left\"\n                icon\n                onClick={() => {\n                  let data = this.state.botDataFn();\n\n                  this.props.postData({\n                    url: \"/api/bot/create\",\n                    data: {user_id: 1, portfolio_ratio: data.investment / 100, bias: parseFloat(data.bias), active: true}\n                  }, \"home\", this.createSuccess.bind(this), () => {\n                    console.log(\"Failed\")\n                  })\n                }}\n                style={{float:\"right\"}}\n              ><Icon name=\"plus\"/>Create Bot</Button>\n            </Grid.Row>\n          </Grid>\n\n          </Card.Content>\n      </Card>\n    );\n  }\n\n  getTradingView() {\n    return (\n      <TradingViewWidget\n        symbol=\"BINANCE:BTCUSDT\"\n        theme={Themes.DARK}\n        timezone=\"America/Argentina/Buenos_Aires\"\n        studies={[\"MACD@tv-basicstudies\", \"RSI@tv-basicstudies\"]}\n        autosize\n      />\n    )\n  }\n\n  renderContent() {\n    return (\n      <Grid style={{marginBottom: 40}}>\n        <Grid.Row columns={2}>\n          <Grid.Column width={10} style={{height: 650}}>\n            {this.getTradingView()}\n          </Grid.Column>\n          <Grid.Column width={4}>\n          {this.getBotOperations()}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.base.home\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withToastManager(Home));\n","import React, { Component } from 'react';\nimport ReactTable from \"react-table\";\n\nimport { Button, Dropdown, Icon, Segment } from 'semantic-ui-react';\n\nexport default class DataTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [],\n      page: 0,\n      pageSize: 5,\n      rowsChecked: [],\n      selectedCount: 0\n    };\n\n    if (this.props.edit) {\n      this.state.columns.push(\n        {\n          width: 50,\n          Header: \"\",\n          Cell: row => (\n            <Dropdown\n              item\n              button\n              className={\"pink circular\"}\n              pointing={\"top\"}\n              style={{ fontSize: \"10px\", color: 'yellow', padding:'12px', borderRadius: '15px' }}\n              icon='bolt' >\n              <Dropdown.Menu>\n                <Dropdown.Header style={{fontSize:\"11px\"}}>Actions</Dropdown.Header>\n                <Dropdown.Item onClick={() => this.onActionSelect('edit', row.row[this.props.rowIdentifier])}>Edit</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.onActionSelect('delete', row.row[this.props.rowIdentifier])}>Delete</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          ),\n          getProps: (state, rowInfo, column) => {\n            return {\n              style: {\n                overflow: 'visible'\n              },\n            };\n          },\n          sortable: false,\n          filterable: false\n        }\n      );\n    }\n\n    this.state.columns.push(...this.props.columns);\n  }\n\n  onActionSelect(action, id) {\n    switch (action) {\n      case \"new\":\n        this.props.onNew();\n        break;\n      case \"edit\":\n        this.props.onEdit(id);\n        break;\n      case \"delete\":\n        this.props.onDelete(id);\n        break;\n      default:\n        break;\n    }\n  }\n\n  getNew() {\n    if (!this.props.edit) {\n      return <></>;\n    }\n\n    return (   \n    <Button style={{ marginRight: \"10px\", marginBottom: \"10px\" }} circular color={\"green\"} icon labelPosition='left' onClick={this.props.onNew}>\n      <Icon name='plus' />\n      New\n    </Button>\n    );\n  }\n\n  render() {\n\n    return (\n      <div style={{textAlign: \"center\"}}>\n        <Segment basic style={{ margin: 0, padding: 0 }}>\n\n        {/* {this.getNew()} */}\n\n        </Segment>\n\n        <ReactTable\n          data={this.props.data}\n          filterable\n          loadingText='Loading...'\n          noDataText='No data'\n          columns={this.state.columns}\n          pageSize={this.state.pageSize}\n          page={this.state.page}\n          onPageChange={page => this.setState({ page: page })}\n          onPageSizeChange={(pageSize, page) => {\n            this.setState({ pageSize: pageSize, page: page });\n          }}\n          previousText={<Icon name='arrow left' color={\"pink\"}/>}\n          nextText={<Icon name='arrow right' color={\"pink\"}/>}\n          className=\"-highlight text-center\"\n        >\n          {(state, makeTable, instance) => {\n            return (\n              <>\n                {makeTable()}\n                {<p>{`Showing ${state.sortedData.length} entries of ${this.props.data.length}`}</p>}\n              </>\n            );\n          }}\n        </ReactTable>\n      </div >\n    );\n  }\n}\n","import React from 'react'\nimport { connect } from \"react-redux\";\n\nimport SmartView, { mapDispatchToProps } from \"./SmartView\";\n\nimport DataTable from '../components/DataTable';\nimport { Icon, Card, Label, Grid } from 'semantic-ui-react'\nimport { withToastManager } from 'react-toast-notifications';\n\nimport Moment from 'react-moment';\n\nconst columns = [\n  {\n    columns: [\n      {\n        Header: <span><Icon name=\"clock\"/>Time</span>,\n        accessor: \"time\",\n        Cell: row => \n          <Label style={{minWidth:50}} as='a' color='teal' image>\n            <Moment unix format=\"DD/MM/YYYY HH:mm:ss\">{row.value / 1000}</Moment>\n          </Label>\n      },\n      {\n        Header: <span><Icon name=\"signal\"/>Amount</span>,\n        accessor: 'amount',\n        Cell: row => \n          <Label style={{minWidth:50}} color={\"blue\"}>\n            <Icon name=\"bitcoin\"/>\n            {row.value.toFixed(10)}\n          </Label>\n      },\n      {\n        Header: <span><Icon name=\"chart bar\"/>Signal</span>,\n        accessor: \"signal\",\n        Cell: row => {\n          let color = \"green\";\n          if (row.value === \"SELL\") {\n            color = \"red\";\n          }\n          return (\n            <Label style={{minWidth:50}} color={color}>\n            {row.value}\n          </Label>\n          );\n        }\n      }\n    ]\n  }\n]\n\nexport class History extends SmartView {\n  fetch() {\n    this.props.getData({\n       url: \"/api/user/trades\",\n       respKey: \"history\",\n     }, \"history\");\n  }\n\n  renderContent() {\n    if (!this.props.state.data.history) {\n      return <></>\n    }\n\n    return (\n        <Grid>\n\n        <Grid.Row centered>\n        <Card style={{padding: 40, minWidth: 800}}>\n          <h3>Past Trades</h3>\n          <DataTable\n                rowIdentifier={\"id\"}\n                windowWidth={this.props.siteState.windowWidth}\n                edit={false}\n                data={this.props.state ? this.props.state.data.history || [] : []}\n                columns={columns} />\n          </Card>\n        </Grid.Row>\n        </Grid>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.base.history,\n    siteState: state.base.site\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withToastManager(History));\n","import React from 'react'\nimport { connect } from \"react-redux\";\n\nimport SmartView, { mapDispatchToProps } from \"./SmartView\";\n\nimport DataTable from '../components/DataTable';\nimport { Button, Icon, Card, Label, Form, Input, Grid } from 'semantic-ui-react'\nimport { withToastManager } from 'react-toast-notifications';\n\nconst columns = [\n  {\n    columns: [\n      {\n        Header: <span><Icon name=\"tag\"/>Type</span>,\n        accessor: \"id\",\n        Cell: row => \n          <Label style={{minWidth:50}} as='a' color='teal' image>\n            <Icon name=\"database\"/>\n            Spot Trading\n          </Label>\n      },\n      {\n        Header: <span><Icon name=\"signal\"/>Portfolio %</span>,\n        accessor: 'portfolio_ratio',\n        Cell: row => \n          <Label style={{minWidth:50}} color={\"blue\"}>\n            {row.value * 100}%\n          </Label>\n      },\n      {\n        Header: <span><Icon name=\"minus\"/>Bias</span>,\n        accessor: \"bias\",\n        Cell: row => \n          <Label style={{minWidth:50}} color={\"blue\"}>\n            {row.value}\n          </Label>\n      },\n      {\n        Header: <span><Icon name=\"plus\"/>Active</span>,\n        accessor: \"active\",\n        Cell: row => \n          <Label style={{minWidth:50}} color={\"blue\"}>\n            {row.value ? \"Yes\" : \"No\"}\n          </Label>\n      }\n    ]\n  }\n]\n\nexport class Profile extends SmartView {\n  fetch() {\n    this.props.getData({\n       url: \"/api/user\",\n       respKey: \"user\",\n       next: {\n        url: \"/api/bot/all\",\n        respKey: \"bots\",\n       }\n     }, \"profile\");\n  }\n\n  state = {\n    email: undefined,\n    binanceKey: undefined,\n    binanceSecret: undefined\n  }\n\n  renderContent() {\n    if (!this.props.state.data.user) {\n      return <></>\n    }\n\n    return (\n        <Grid>\n\n        <Grid.Row centered>\n        <Card style={{padding: 40, minWidth: 600}}>\n          <Form style={{marginBottom: 20}}>\n          <Form.Field>\n              <label>Email</label>\n              <Input icon='mail' onChange={(e, d) => {this.setState({email: d.value})}} value={this.state.email || this.props.state.data.user.email} />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Binance Key</label>\n              <Input icon='key' onChange={(e, d) => {this.setState({binanceKey: d.value})}} value={this.state.binanceKey || this.props.state.data.user.binance_key} />\n            </Form.Field>\n\n            <Form.Field>\n            <label>Binance Secret</label>\n            <Input icon='lock' type=\"password\" onChange={(e, d) => {this.setState({binanceSecret: d.value})}} value={this.state.binanceSecret || this.props.state.data.user.binance_secret} />\n            </Form.Field>\n\n            <Button\n                color=\"pink\"\n                size=\"large\"\n                labelPosition=\"left\"\n                icon\n                onClick={() => {\n                  this.props.postData({\n                    url: \"/api/user/update\",\n                    data: {id: 1, \n                      email: this.state.email || this.props.state.data.user.email, \n                      binance_key: this.state.binanceKey || this.props.state.data.user.binance_key, \n                      binance_secret: this.state.binanceSecret || this.props.state.data.user.binance_secret}\n                  }, \"home\", () => {\n                    super.toastSuccess(\"Profile updated!\")\n                  }, () => {\n                    console.log(\"Failed\")\n                  })\n                }}\n              ><Icon name=\"sync\"/>Update</Button>\n          </Form>\n\n          <h3>Trading Bots</h3>\n          <DataTable\n                rowIdentifier={\"id\"}\n                windowWidth={this.props.siteState.windowWidth}\n                edit={true}\n                data={this.props.state ? this.props.state.data.bots || [] : []}\n                columns={columns} />\n          </Card>\n        </Grid.Row>\n        </Grid>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.base.profile,\n    siteState: state.base.site\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withToastManager(Profile));\n","import React, { Component } from 'react'\n\nimport { Icon, Grid } from 'semantic-ui-react'\n\nimport { connect } from 'react-redux'\n\nimport { handleClientError } from \"../actions/index\";\n\nclass Shield extends Component {\n  state = {\n    error: false,\n    info: null\n  };\n\n  componentDidCatch(error, info) {\n    this.setState({\n      error: error,\n      info: info\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n\n      this.props.handleClientError(this.state.error, this.state.info, this.props.section);\n\n      return (\n        <Grid.Row centered>\n          <Grid.Column style={{ textAlign: \"center\" }}>\n            <Icon size={\"big\"} color={\"pink\"} name={\"exclamation triangle\"}></Icon>\n            <h2>Browser error</h2>\n            \n          </Grid.Column>\n        </Grid.Row>\n      );\n\n    }\n\n    return this.props.children;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.base.shield\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleClientError: (message, stack, section) => dispatch(handleClientError(message, stack, section))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shield);\n","import React, { Component } from 'react'\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Icon,\n  Menu,\n  Sidebar,\n} from 'semantic-ui-react'\n\n\nconst LinkComponent = (props) => {\n  let routePath = window.location.pathname.split(\"/\")[1];\n\n  if (routePath === \"\") {\n    routePath = \"trading\";\n  }\n\n  return (\n    <Link to={props.route.link} key={routePath}>\n      <Menu.Item as={'div'} style={{ minHeight: \"40px\", display: 'flex' }} active={props.route.name.toLowerCase() === routePath} >\n        <Icon name={props.route.icon} style={{ marginRight: (props.withLabel ? \"5px\" : \"0px\") }} /> {props.withLabel ? props.route.name : \"\"}\n      </Menu.Item>\n    </Link>\n  );\n}\n\nexport default class SidebarWrap extends Component {\n  state = {\n    menuExpanded: false,\n    activeItem: \"Trading\"\n  }\n\n  createLink(withLabel, route) {\n    if (!route.withLink)\n      return <></>;\n\n    return (\n      <LinkComponent key={route.path} route={route} withLabel={withLabel} />\n    );\n  }\n\n  createLinks = (withLabel) => {\n    let linkList = []\n    for (let i = 0; i < this.props.routes.length; i++)\n      linkList.push(this.createLink(withLabel, this.props.routes[i]));\n\n    return linkList;\n  }\n\n  getMiniSidebar() {\n    return (\n      <Sidebar\n        as={Menu}\n        animation={\"push\"}\n        direction={\"left\"}\n        inverted\n        vertical\n        visible={!this.state.menuExpanded}\n        width='very thin'\n        onMouseEnter={() => {\n            this.setState({menuExpanded: true});\n        }}\n        onMouseDown={() => {\n            this.setState({menuExpanded: true});\n        }}\n      >\n        {this.createLinks(false)}\n      </Sidebar>\n    );\n  }\n\n  getSidebar() {\n    return (\n      <Sidebar\n      as={Menu}\n      animation={'push'}\n      direction={'left'}\n      inverted\n      vertical\n      onMouseLeave={() => {\n        this.setState({menuExpanded: false});\n      }}\n      onMouseDown={() => {\n          this.setState({menuExpanded: false});\n      }}\n      visible={this.state.menuExpanded}\n      width='thin'\n    >\n      {this.createLinks(true)}\n    </Sidebar>\n    );\n  }\n\n  render() {\n    return (\n      <>\n      {this.getSidebar()}\n      {this.getMiniSidebar()}\n    </>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport {\n  Grid,\n  Icon,\n  Menu,\n  Sidebar,\n  Segment,\n} from 'semantic-ui-react'\n\nimport Shield from './Shield.js'\nimport SidebarWrap from './SidebarWrap'\n\nexport default class Navigation extends Component {\n  static defaultProps = {\n    routes: [],\n    homeRoute: {}\n  }\n\n  createRoute(route) {\n    if (route.path !== route.link) {\n      return (\n        <div key={route.path}>\n          <Route path={route.path} component={route.component} />\n          <Route exact path={route.link} component={route.component} />\n        </div>\n      );\n    }\n\n    return (\n      <Route key={route.path} exact path={route.path} component={route.component} />\n    );\n  }\n\n  createRoutes = () => {\n    let routesList = []\n    for (let i = 0; i < this.props.routes.length; i++)\n      routesList.push(this.createRoute(this.props.routes[i]));\n\n    routesList.push(this.createRoute(this.props.homeRoute));\n\n    return routesList;\n  }\n\n  getWidth() {\n    if (this.props.windowWidth >= 768)\n      return 15;\n\n    return 16;\n  }\n\n  render() {\n    return (\n      <>\n        <SidebarWrap routes={this.props.routes}/>\n\n        <Sidebar.Pusher>\n\n          <Segment basic>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={this.getWidth()}>\n                  <Switch>\n                    <Shield section={\"\"}>\n                      {this.createRoutes()}\n                    </Shield>\n                  </Switch>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n\n        </Sidebar.Pusher>\n      </>\n    )\n  }\n} \n","import React, { Component, createRef } from 'react';\nimport {\n  Container,\n  Grid,\n  Progress,\n  Ref,\n  Segment,\n  Sidebar,\n  Sticky,\n} from 'semantic-ui-react';\n\nimport { ToastProvider } from 'react-toast-notifications'\n\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport { routes, homeRoute } from './routes';\nimport Navigation from './components/Navigation';\nimport { getData, setWindowSize } from \"./actions/index\";\n\nimport \"./App.css\"\n\nexport class App extends Component {\n  // Needed for sticky progress bar\n  contextRef = createRef()\n\n  constructor(props) {\n    super(props);\n\n    this.updateWindowSize = this.updateWindowSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowSize();\n    window.addEventListener(\"resize\", this.updateWindowSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowSize);\n  }\n\n  updateWindowSize() {\n    this.props.setWindowSize(window.innerWidth, window.innerHeight, 'site')\n  }\n\n  getProgressBar() {\n    let visibility = 'visible';\n    if (this.props.state.loadingProgress === 100)\n      visibility = 'hidden';\n\n    return (<Progress total={this.props.state.loadingTotal} color='pink' value={this.props.state.loadingProgress} indicating size={'tiny'} style={{ visibility: visibility, margin: 0, padding: 0, marginRight: \"10px\" }} />);\n  }\n\n  getOffsetColumn() {\n    if (this.props.state.windowWidth >= 768)\n      return (\n        <Grid.Column width={2}></Grid.Column>\n      );\n  }\n\n  render() {\n    return (\n      <Ref innerRef={this.contextRef}>\n        <ToastProvider autoDismissTimeout={4000} placement=\"bottom-right\">\n          <Container style={{ marginTop: 0, width: '98%' }}>\n            <Sticky context={this.contextRef}>\n              {this.getProgressBar()}\n            </Sticky>\n\n            {/* Top bar */}\n            {/* <Segment basic padded={false} size={\"mini\"} style={{ marginTop: 0, paddingTop: '5px' }}>\n                <Button size={\"medium\"} icon='th list' color={\"pink\"} onClick={this.toggleSidebar}></Button>\n\n                <h2 style={{display:\"inline\", marginLeft: 15, color: \"#EC386B\"}}>Dynamic Tuning</h2>\n                <Image inline size='small' src=\"/img/logo.png\" style={{ marginLeft: '25px' }} />\n            </Segment> */}\n\n            {/* Sidebar and content */}\n            <Sidebar.Pushable as={Segment} style={{ minHeight: '350px' }}>\n              <Navigation windowWidth={this.props.state.windowWidth} routes={routes} homeRoute={homeRoute} />\n            </Sidebar.Pushable>\n\n            {/* Footer */}\n            <Grid centered>\n              <Grid.Row columns={16}>\n\n                {/* Column to match layout of main segment */}\n                {this.getOffsetColumn()}\n\n                <Grid.Column style={{marginLeft:35}} width={15}>\n                  <Grid>\n                    <Grid.Row centered style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }}>\n                      <small>\n                        <span style={{ color: \"#EC386B\", fontWeight: 'bold' }}>Olympus 2020 </span>\n\n                        <div>\n                          {/* <Button basic circular color=\"black\" icon='lightbulb' onClick={() => this.setState({theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"})} /> */}\n                        </div>\n                      </small>\n                    </Grid.Row>\n                  </Grid>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n\n          </Container>\n        </ToastProvider>\n      </Ref>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state.base.site\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getData: (calls, section) => dispatch(getData(calls, section)),\n    setWindowSize: (width, height, section) => dispatch(setWindowSize(width, height, section))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","import { combineReducers } from 'redux';\n\nfunction getDefaultState(section) {\n  return {\n    isLoading: false,\n    loadingProgress: 100,\n    loadingTotal: 100,\n    hasErrored: \"\",\n    lastUpdated: Date.now(),\n    section: section,\n    data: {}\n  }\n}\n\nconst stateAwareComponents = [\n  'site',\n  'home',\n  'profile',\n  'history'\n]\n\nfunction getInitialState() {\n  let state = {};\n\n  for (let i = 0; i < stateAwareComponents.length; i++)\n    state[stateAwareComponents[i]] = getDefaultState(stateAwareComponents[i]);\n\n  state.site.windowWidth = 1024;\n  state.site.windowHeight = 768;\n\n  return state;\n}\n\nexport function base(state = getInitialState(), action) {\n  if (action.section !== undefined && state[action.section] === undefined)\n    state[action.section] = {};\n\n  let newState = Object.assign({}, state);\n\n  if (action.section !== undefined)\n    newState[action.section] = Object.assign({}, state[action.section]);\n\n  let sectionState = newState[action.section];\n\n  switch (action.type) {\n    case 'REQUEST_FINISHED':\n      sectionState.lastUpdated = action.lastUpdated;\n      sectionState.isLoading = action.isLoading;\n      sectionState.data = action.data;\n      return newState;\n    case 'RESET_REQUEST_STATE':\n      sectionState.isLoading = action.isLoading;\n      sectionState.hasErrored = action.hasErrored;\n      return newState;\n    case 'HAS_ERRORED':\n      sectionState.hasErrored = action.hasErrored;\n      return newState;\n    case 'LOADING_PROGRESS':\n      sectionState.loadingProgress = action.loadingProgress;\n      return newState;\n    case 'WINDOW_RESIZE':\n      sectionState.windowWidth = action.width;\n      sectionState.windowHeight = action.height;\n      return newState;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  base\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nexport const store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { store } from './store.js'\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport \"react-table/react-table.css\";\nimport \"semantic-ui-less/semantic.less\";\n\nimport \"./assets/css/json_editor.css\"\nimport \"./assets/css/react_table_overrides.css\"\n\nimport JavascriptTimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nimport history from './history';\n\nJavascriptTimeAgo.addLocale(en)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App store={store} />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}